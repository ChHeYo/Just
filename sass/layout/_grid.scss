.container {
    margin: 0 auto;
    max-width: $container-width;
    width: 100%;

    @include media-query(phone){
        padding: 0 2rem;
    }
}

.row {

    & div[class^="col-"] {
        float: left;
        // SO THAT WHEN GRIDS COLLAP THERE WOULD BE SPACE BETWEEN THEM
        margin-bottom: $grid-gutter-height;

        // NESTED COLS DO NOT GET BOTTOM MARGIN SO THAT THERE WON'T BE A AGGRAGATED GAP
        & .row div[class^="col-"] {
            margin-bottom: 0; // FOR LG SCREEN SIZE
        }

        // WE NEED GAPS BETWEEN COLS WITHIN NESTED ROW
        &:not(:last-of-type) {
            margin-right: $grid-gutter-width;
        }
    }

    & .col-1-2 {
        // 100% OF PARENT ELEMENT - GRID GUTTER WIDTH
        @include grid-width-1(2);
    }

    & .col-1-3 {
        @include grid-width-1(3);
    }

    & .col-2-3 {
        @include grid-width-2(3, 2);
    }
    
    & .col-1-4 {
        @include grid-width-1(4);
    }
    
    & .col-2-4 {
        @include grid-width-2(4, 2);
    }

    & .col-3-4 {
        @include grid-width-2(4, 3);
    }

    & .col-offset-1-2 {
        @include offset-1(2);
    }

    & .col-offset-1-3 {
        @include offset-1(3);
    }

    & .col-offset-2-3 {
        @include offset-2(3, 2);
    }
    
    & .col-offset-1-4 {
        @include offset-1(4);
    }

    & .col-offset-2-4 {
        @include offset-2(4, 2);
    }

    & .col-offset-3-4 {
        @include offset-2(4, 3);
    }
}

.row-block {

    @include media-query(phone){
        & div[class^="col-"] {
            width: 100% !important;
        }

        & div[class^="col-offset-"] {
            margin-left: 0 !important;
        }
    }
}

// CLEARING FLOAT 
// IMPORTANT TO USE ROW FOR THAT VERY REASON
.container::after,
.row::after {
    content: "";
    display: table;
    clear: both;
}